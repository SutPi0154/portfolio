import Navbar from "@/components/Navbar";
import Footer from "@/components/footer";
import ArrowUpwardIcon from "@mui/icons-material/ArrowUpward";
import { Box } from "@mui/material";
import CircularProgress from "@mui/material/CircularProgress";
import Head from "next/head";
import { useEffect, useState } from "react";
import { Element, Link } from "react-scroll";
import AboutPage from "./About";
import ContactMe from "./Contact";
import HomePage from "./Home";
import PortfolioPage from "./Portfolio";
import ServicePage from "./Services";
import SkillsPage from "./Skills";

interface Props {
  isDarkMode: boolean;
  setDarkMode: () => void;
}

export default function Home({ isDarkMode, setDarkMode }: Props) {
  const [showAdditionalSection, setShowAdditionalSection] = useState(false);
  const [isLoading, setIsLoading] = useState(false);

  const handleScroll = () => {
    const scrollPosition = window.scrollY;
    setShowAdditionalSection(scrollPosition >= window.innerHeight - 100);
  };

  useEffect(() => {
    window.addEventListener("scroll", handleScroll);
    return () => {
      window.removeEventListener("scroll", handleScroll);
    };
  }, []);

  // Simulate data loading with useEffect
  useEffect(() => {
    // Simulate a delay (e.g., fetching data from an API)
    const fetchData = async () => {
      // Simulated delay of 2 seconds
      await new Promise((resolve) => setTimeout(resolve, 2000));

      // Set loading to false once data is "loaded"
      setIsLoading(true);
    };

    // Call the fetchData function
    fetchData();
  }, []);
  if (isLoading === false)
    return (
      <Box
        sx={{
          bgcolor: "container.main",
          height: "100vh",
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
        }}
      >
        <CircularProgress disableShrink />
      </Box>
    );
  return (
    <Box sx={{ bgcolor: "container.main" }}>
      <Head>
        <title>Jl Sut Pi</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link className="favicon" rel="icon" href="/favicon.png" />
      </Head>

      <Navbar setDarkMode={setDarkMode} isDarkMode={isDarkMode} />
      <HomePage />
      <Box sx={{ position: "relative" }}>
        <Element name="about">
          <AboutPage />
        </Element>

        {/* Conditional rendering of the additional section */}
        {showAdditionalSection && (
          <Link
            to="home"
            spy={true}
            smooth={true}
            style={{ cursor: "pointer", userSelect: "none" }}
            offset={0}
            duration={500}
          >
            <Box
              sx={{
                position: "fixed",
                bottom: 150,
                zIndex: 100,
                right: 100,
                bgcolor: "primary.main",
                width: 40,
                height: 40,
                display: { xs: "none", lg: "flex" },
                justifyContent: "center",
                alignItems: "center",
                borderRadius: 2,
              }}
            >
              <ArrowUpwardIcon sx={{ fontSize: 30, color: "white" }} />
            </Box>
          </Link>
        )}

        <SkillsPage />
        <ServicePage />
        <PortfolioPage />
        <ContactMe />
        <Footer />
      </Box>
    </Box>
  );
}
